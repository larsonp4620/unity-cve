package jp.ac.u_aizu.cal.cve.client;

import java.io.IOException;

import cve.CVEClient;
import cve.CVEClientIF;

/**
 * A simple console based client that can subscribe to cve channel and log what
 * is received.
 * 
 * <pre>
 * Usage: &lt;hostname&gt; &lt;port&gt;
 * 
 * <pre>
 * @author Rasika Ranaweera
 * 
 */
public class Receiver implements CVEClientIF {

	public static void main(String[] args) {
		if (args.length == 2) {
			final String hostName = args[0];
			final String channel = args[1];
			try {
				new Receiver(hostName, channel);
			} catch (Exception e) {
				System.err.println(e.getMessage());
			}
		} else {
			System.err.println("Usage: <hostname> <channel>");
		}
	}

	public Receiver(String hostName, String channel) throws NullPointerException, IOException {
		System.out.println("************ Receiver is starting ************");
		if (null == hostName) {
			throw new NullPointerException("Hostname is null");
		}
		if (null == channel) {
			throw new NullPointerException("Channel is null");
		}
		this.connect(hostName, channel);
	}

	private void connect(String hostName, String channel) throws IOException {
		if (hostName.trim().isEmpty() || channel.trim().isEmpty()) {
			throw new IOException("Either HostName or Channel is not specified");
		}
		System.out.println("Connecting to : " + hostName + " via channel " + channel);
		new CVEClient(hostName, this, channel);
		System.out.println("Connected to : " + hostName + " via channel " + channel);
	}

	@Override
	public void getExtraParam(String param, float value) {
		System.out.println("Parameter: " + param + ", Value: " + value);
	}

	@Override
	public void getLocation(float x, float y, float z) {
		System.out.println("Location: x: " + x + ", y: " + y + ", z: " + z);
	}

	@Override
	public void getOrientation(float roll, float pitch, float yaw) {
		System.out.println("Orientation: roll: " + roll + ", pitch: " + pitch + ", yaw: " + yaw);
	}

	@Override
	public void getPosition(float x, float y, float z, float roll, float pitch, float yaw) {
		System.out.println("Position [Location: x: " + x + ", y: " + y + ", z: " + z + "], [Orientation: roll: " + roll + ", pitch: " + ", yaw: "
				+ yaw + "]");
	}
}

package unity_cve_bridge;

import java.io.IOException;
import java.nio.ByteBuffer;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;

import cve.CVEClient;
import cve.CVEClientIF;
import com.google.flatbuffers.*;
import unity_cve_fbuffer_classes.*;

public class Bridge_Controller {
	final String CVEServerHostName = "127.0.0.1"; // args
	final String unityClientHostName = "127.0.0.1";
	final String channel = "CH0"; // args
	private Bridge_CVE_Component bridgeCVEComponent;
	private Bridge_Unity_Server unityServerThread;

	public static void main(String[] args) {
		if (false) {
			// Check args
		}

		new Bridge_Controller();

	}

	private Bridge_Controller() {
		try {
			this.bridgeCVEComponent = new Bridge_CVE_Component(CVEServerHostName, channel, this);
			this.unityServerThread = new Bridge_Unity_Server(unityClientHostName, this);
			// Bridge_Unity_Server.sendFBufferExtraParam(uServer, "test", 5.5f,
			// "CH10");
			// Bridge_CVE_Component.sendMessage("test message from u_bridge");
			// uServer.listenProcessPackets();

		} catch (Exception e) {
			System.err.println(e.getMessage());
			System.err.println("Error Starting");
		}
		

	}

	public void handleCVELocation(float x, float y, float z, String channel) {
		this.unityServerThread.sendFBufferLocation(x, y, z, channel);

	}

	public void handleCVEPosition(float x, float y, float z, float roll, float pitch, float yaw, String channel) {
		this.unityServerThread.sendFBufferPosition(x, y, z, roll, pitch, yaw, channel);

	}

	public void handleCVEOrientation(float roll, float pitch, float yaw, String channel) {
		this.unityServerThread.sendFBufferOrientation(roll, pitch, yaw, channel);
	}

	public void handleCVEExtraParam(String name, float value, String channel) {
		this.unityServerThread.sendFBufferExtraParam(name, value, channel);
	}

	public void handleUnityLocation(float x, float y, float z, String channel) {
		this.bridgeCVEComponent.cveClient.setLocation(x, y, z);
	}

	public void handleUnityPosition(float x, float y, float z, float roll, float pitch, float yaw, String channel) {
		this.bridgeCVEComponent.cveClient.setPosition(x, y, z, roll, pitch, yaw);

	}

	public void handleUnityOrientation(float roll, float pitch, float yaw, String channel) {
		this.bridgeCVEComponent.cveClient.setOrientation(roll, pitch, yaw);
	}

	public void handleUnityExtraParam(String name, float value, String channel) {
		this.bridgeCVEComponent.cveClient.setExtraParam(name, value);
	}

}
